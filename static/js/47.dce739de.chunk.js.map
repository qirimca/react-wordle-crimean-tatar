{"version":3,"file":"static/js/47.dce739de.chunk.js","mappings":"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","sources":["components/modals/BaseModal.tsx","components/modals/DatePickerModal.tsx"],"sourcesContent":["import { Dialog, Transition } from '@headlessui/react'\nimport { XCircleIcon } from '@heroicons/react/outline'\nimport { Fragment } from 'react'\n\ntype Props = {\n  title: string\n  children: React.ReactNode\n  isOpen: boolean\n  handleClose: () => void\n  topLeftComponent?: React.ReactNode\n}\n\nexport const BaseModal = ({\n  title,\n  children,\n  isOpen,\n  handleClose,\n  topLeftComponent,\n}: Props) => {\n  return (\n    <Transition.Root show={isOpen} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"fixed inset-0 z-10 overflow-y-auto\"\n        onClose={handleClose}\n      >\n        <div className=\"flex min-h-full items-center justify-center px-4 py-10 text-center sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 min-h-screen bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div className=\"inline-block transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left align-bottom shadow-xl transition-all dark:bg-gray-800 sm:my-8 sm:w-full sm:max-w-sm sm:p-6 sm:align-middle\">\n              <button\n                onClick={() => handleClose()}\n                tabIndex={-1}\n                aria-pressed=\"false\"\n                aria-label=\"Закрити\"\n                className=\"absolute right-4 top-4 focus:outline-none\"\n              >\n                <XCircleIcon className=\"h-6 w-6 cursor-pointer dark:stroke-white\" />\n              </button>\n              <div>\n                <div className=\"text-center\">\n                  {topLeftComponent && (\n                    <div className=\"mb-4 flex justify-center\">\n                      {topLeftComponent}\n                    </div>\n                  )}\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-lg font-medium leading-6 text-gray-900 dark:text-gray-100\"\n                  >\n                    {title}\n                  </Dialog.Title>\n                  <div className=\"mt-2\">{children}</div>\n                </div>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/outline'\nimport { addDays, format, startOfDay } from '../../lib/dateutils'\nimport { useState } from 'react'\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { DATE_LOCALE } from '../../constants/settings'\nimport {\n  DATEPICKER_CHOOSE_TEXT,\n  DATEPICKER_TITLE,\n  DATEPICKER_TODAY_TEXT,\n} from '../../constants/strings'\nimport { getToday, getYesterday } from '../../lib/dateutils'\nimport {\n  firstGameDate,\n  getLastGameDate,\n  isValidGameDate,\n  periodInDays,\n} from '../../lib/words'\nimport { BaseModal } from './BaseModal'\n\ntype Props = {\n  isOpen: boolean\n  initialDate?: Date\n  handleSelectDate: (date: Date) => void\n  handleClose: () => void\n}\n\nexport const DatePickerModal = ({\n  isOpen,\n  initialDate,\n  handleSelectDate,\n  handleClose,\n}: Props) => {\n  const lastGameDate = getLastGameDate(getYesterday())\n  const [selectedDate, setSelectedDate] = useState(() => {\n    if (initialDate == null || initialDate > lastGameDate) {\n      return lastGameDate\n    }\n    return initialDate\n  })\n\n  const headingDateFormat = 'MMMM yyyy'\n  const buttonDateFormat = 'd MMM yyyy'\n  const formatOptions = { locale: DATE_LOCALE }\n\n  registerLocale('locale', DATE_LOCALE)\n\n  const excludedDates: Date[] = []\n  if (periodInDays > 1) {\n    let date = firstGameDate\n    for (date = firstGameDate; date < getToday(); date = addDays(date, 1)) {\n      if (!isValidGameDate(date)) {\n        excludedDates.push(date)\n      }\n    }\n  }\n\n  return (\n    <BaseModal\n      title={DATEPICKER_TITLE}\n      isOpen={isOpen}\n      handleClose={handleClose}\n    >\n      <div className=\"mx-auto flex max-w-2xl items-center justify-center space-x-4 py-5 text-left sm:w-48\">\n        <DatePicker\n          locale=\"locale\"\n          minDate={firstGameDate}\n          maxDate={getYesterday()}\n          selected={selectedDate}\n          excludeDates={excludedDates}\n          onChange={(date: Date) => setSelectedDate(startOfDay(date))}\n          inline\n          popperClassName=\"react-datepicker-left\"\n          renderCustomHeader={({\n            date,\n            decreaseMonth,\n            increaseMonth,\n            prevMonthButtonDisabled,\n            nextMonthButtonDisabled,\n          }) => (\n            <div className=\"flex items-center justify-between px-2 py-2\">\n              <span className=\"text-lg text-gray-700 dark:text-gray-100\">\n                {format(date, headingDateFormat, formatOptions)}\n              </span>\n\n              <div className=\"space-x-2\">\n                <button\n                  onClick={decreaseMonth}\n                  disabled={prevMonthButtonDisabled}\n                  type=\"button\"\n                  className={`\n                            ${\n                              prevMonthButtonDisabled &&\n                              'cursor-not-allowed opacity-50'\n                            }\n                            inline-flex rounded border border-gray-300 bg-white p-1 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-0\n                            dark:border-gray-600 dark:bg-slate-700 dark:text-gray-200 dark:focus:ring-blue-600\n                        `}\n                >\n                  <ChevronLeftIcon className=\"h-5 w-5 text-gray-600 dark:text-gray-300\" />\n                </button>\n\n                <button\n                  onClick={increaseMonth}\n                  disabled={nextMonthButtonDisabled}\n                  type=\"button\"\n                  className={`\n                            ${\n                              nextMonthButtonDisabled &&\n                              'cursor-not-allowed opacity-50'\n                            }\n                            inline-flex rounded border border-gray-300 bg-white p-1 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-0\n                            dark:border-gray-600 dark:bg-slate-700 dark:text-gray-200 dark:focus:ring-blue-600\n                        `}\n                >\n                  <ChevronRightIcon className=\"h-5 w-5 text-gray-600 dark:text-gray-300\" />\n                </button>\n              </div>\n            </div>\n          )}\n        />\n      </div>\n      <div className=\"mt-5 flex columns-2 items-center items-stretch justify-center gap-2 text-center dark:text-white sm:mt-6\">\n        <button\n          type=\"button\"\n          disabled={!isValidGameDate(getToday())}\n          className=\"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:border-gray-200 disabled:bg-gray-500 disabled:bg-white disabled:text-gray-900\n          disabled:focus:outline-none disabled:dark:border-gray-600 disabled:dark:bg-gray-800 disabled:dark:text-gray-400 sm:text-base sm:text-base\"\n          onClick={() => handleSelectDate(getToday())}\n        >\n          {DATEPICKER_CHOOSE_TEXT} {DATEPICKER_TODAY_TEXT}\n        </button>\n        <button\n          type=\"button\"\n          className=\"mt-2 inline-flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-center text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 \"\n          disabled={selectedDate >= getToday()}\n          onClick={() => handleSelectDate(selectedDate)}\n        >\n          {DATEPICKER_CHOOSE_TEXT}\n          <br />\n          {format(selectedDate, buttonDateFormat, formatOptions)}\n        </button>\n      </div>\n    </BaseModal>\n  )\n}\n"],"names":["BaseModal","_ref","title","children","isOpen","handleClose","topLeftComponent","_jsx","Transition","Root","show","as","Fragment","Dialog","className","onClose","_jsxs","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","onClick","tabIndex","XCircleIcon","Title","DatePickerModal","initialDate","handleSelectDate","lastGameDate","getLastGameDate","getYesterday","selectedDate","setSelectedDate","useState","formatOptions","locale","DATE_LOCALE","registerLocale","excludedDates","periodInDays","date","firstGameDate","getToday","addDays","isValidGameDate","push","DATEPICKER_TITLE","DatePicker","minDate","maxDate","selected","excludeDates","onChange","startOfDay","inline","popperClassName","renderCustomHeader","_ref2","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","format","disabled","type","ChevronLeftIcon","ChevronRightIcon","DATEPICKER_CHOOSE_TEXT","DATEPICKER_TODAY_TEXT"],"sourceRoot":""}