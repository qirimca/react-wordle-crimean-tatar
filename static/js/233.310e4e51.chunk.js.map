{"version":3,"file":"static/js/233.310e4e51.chunk.js","mappings":"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","sources":["components/modals/BaseModal.tsx","components/navbar/LanguageSelector.tsx","components/modals/InfoModal.tsx"],"sourcesContent":["import { Dialog, Transition } from '@headlessui/react'\nimport { XCircleIcon } from '@heroicons/react/outline'\nimport { Fragment } from 'react'\n\ntype Props = {\n  title: string\n  children: React.ReactNode\n  isOpen: boolean\n  handleClose: () => void\n  topLeftComponent?: React.ReactNode\n}\n\nexport const BaseModal = ({\n  title,\n  children,\n  isOpen,\n  handleClose,\n  topLeftComponent,\n}: Props) => {\n  return (\n    <Transition.Root show={isOpen} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"fixed inset-0 z-10 overflow-y-auto\"\n        onClose={handleClose}\n      >\n        <div className=\"flex min-h-full items-center justify-center px-4 py-10 text-center sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 min-h-screen bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div className=\"inline-block transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left align-bottom shadow-xl transition-all dark:bg-gray-800 sm:my-8 sm:w-full sm:max-w-sm sm:p-6 sm:align-middle\">\n              <button\n                onClick={() => handleClose()}\n                tabIndex={-1}\n                aria-pressed=\"false\"\n                aria-label=\"Закрити\"\n                className=\"absolute right-4 top-4 focus:outline-none\"\n              >\n                <XCircleIcon className=\"h-6 w-6 cursor-pointer dark:stroke-white\" />\n              </button>\n              <div>\n                <div className=\"text-center\">\n                  {topLeftComponent && (\n                    <div className=\"mb-4 flex justify-center\">\n                      {topLeftComponent}\n                    </div>\n                  )}\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-lg font-medium leading-6 text-gray-900 dark:text-gray-100\"\n                  >\n                    {title}\n                  </Dialog.Title>\n                  <div className=\"mt-2\">{children}</div>\n                </div>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { useState } from 'react'\nimport { getLocale } from '../../constants/locales'\n\ninterface Language {\n  code: string\n  name: string\n  nativeName: string\n}\n\nconst LANGUAGES: Language[] = [\n  { code: 'crh', name: 'Crimean Tatar', nativeName: 'Qırımtatar' },\n  { code: 'en', name: 'English', nativeName: 'English' },\n  { code: 'uk', name: 'Ukrainian', nativeName: 'Українська' },\n]\n\ninterface Props {\n  onLanguageChange?: () => void\n  autoFocus?: boolean\n}\n\nexport const LanguageSelector = ({\n  onLanguageChange,\n  autoFocus,\n}: Props = {}) => {\n  const currentLocale = getLocale()\n  const [isOpen, setIsOpen] = useState(false)\n\n  const currentLanguage =\n    LANGUAGES.find((lang) => lang.code === currentLocale) || LANGUAGES[0]\n\n  const changeLanguage = (langCode: string) => {\n    const url = new URL(window.location.href)\n    if (langCode === 'crh') {\n      url.searchParams.delete('lang')\n    } else {\n      url.searchParams.set('lang', langCode)\n    }\n\n    // Викликати callback перед перезавантаженням\n    if (onLanguageChange) {\n      onLanguageChange()\n    }\n\n    window.location.href = url.toString()\n  }\n\n  return (\n    <div\n      className=\"language-selector relative\"\n      onMouseEnter={() => setIsOpen(true)}\n      onMouseLeave={() => setIsOpen(false)}\n    >\n      <button\n        className=\"flex cursor-pointer items-center rounded px-2 py-1 transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 dark:hover:bg-gray-800\"\n        autoFocus={autoFocus}\n        onClick={() => setIsOpen(!isOpen)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault()\n            setIsOpen(!isOpen)\n          }\n        }}\n        aria-expanded={isOpen}\n        aria-label=\"Select language / Вибрати мову\"\n      >\n        <span\n          className=\"select-none text-center text-xs text-gray-700 dark:text-gray-300\"\n          style={{ fontFamily: 'e-Ukraine, system-ui, sans-serif' }}\n        >\n          {currentLanguage.nativeName}\n        </span>\n        <svg\n          className={`ml-1 h-4 w-4 text-gray-500 transition-transform duration-200 dark:text-gray-400 ${\n            isOpen ? 'rotate-180' : ''\n          }`}\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </button>\n\n      {isOpen && (\n        <div\n          className=\"absolute right-0 top-full z-50 min-w-max rounded-lg border border-gray-200 bg-white shadow-lg dark:border-gray-600 dark:bg-gray-800\"\n          onMouseEnter={() => setIsOpen(true)}\n          onMouseLeave={() => setIsOpen(false)}\n        >\n          {LANGUAGES.map((lang) => (\n            <button\n              key={lang.code}\n              onClick={() => changeLanguage(lang.code)}\n              className={`block w-full px-3 py-2 text-left text-xs transition-colors first:rounded-t-lg last:rounded-b-lg hover:bg-gray-100 dark:hover:bg-gray-700 ${\n                lang.code === currentLocale\n                  ? 'bg-blue-50 text-blue-700 dark:bg-blue-900/20 dark:text-blue-300'\n                  : 'text-gray-700 dark:text-gray-300'\n              }`}\n              style={{ fontFamily: 'e-Ukraine, system-ui, sans-serif' }}\n            >\n              {lang.nativeName}\n              {lang.code === currentLocale && (\n                <span className=\"ml-2 text-blue-500\">✓</span>\n              )}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n","import { Cell } from '../grid/Cell'\nimport { BaseModal } from './BaseModal'\nimport { getLocalizedStrings } from '../../constants/locales'\nimport { LanguageSelector } from '../navbar/LanguageSelector'\n\ntype Props = {\n  isOpen: boolean\n  handleClose: () => void\n}\n\nexport const InfoModal = ({ isOpen, handleClose }: Props) => {\n  const strings = getLocalizedStrings()\n  const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent)\n\n  return (\n    <BaseModal\n      title={strings.INFO_MODAL_TITLE}\n      isOpen={isOpen}\n      handleClose={handleClose}\n      topLeftComponent={\n        <LanguageSelector\n          autoFocus={true}\n          onLanguageChange={() => {\n            if (isOpen) {\n              localStorage.setItem('infoModalOpen', 'true')\n            }\n          }}\n        />\n      }\n    >\n      <p className=\"text-sm text-gray-500 dark:text-gray-300\">\n        {strings.INFO_MODAL_DESCRIPTION}\n      </p>\n\n      <div className=\"mb-1 mt-4 flex justify-center\">\n        <Cell\n          isRevealing={true}\n          isCompleted={true}\n          value=\"K\"\n          status=\"correct\"\n        />\n        <Cell value=\"I\" isCompleted={true} />\n        <Cell value=\"T\" isCompleted={true} />\n        <Cell value=\"A\" isCompleted={true} />\n        <Cell value=\"P\" isCompleted={true} />\n      </div>\n      <p className=\"text-sm text-gray-500 dark:text-gray-300\">\n        {strings.INFO_MODAL_CORRECT_EXPLANATION}\n      </p>\n\n      <div className=\"mb-1 mt-4 flex justify-center\">\n        <Cell value=\"S\" isCompleted={true} />\n        <Cell value=\"E\" isCompleted={true} />\n        <Cell\n          isRevealing={true}\n          isCompleted={true}\n          value=\"L\"\n          status=\"present\"\n        />\n        <Cell value=\"Â\" isCompleted={true} />\n        <Cell value=\"M\" isCompleted={true} />\n      </div>\n      <p className=\"text-sm text-gray-500 dark:text-gray-300\">\n        {strings.INFO_MODAL_PRESENT_EXPLANATION}\n      </p>\n\n      <div className=\"mb-1 mt-4 flex justify-center\">\n        <Cell value=\"G\" isCompleted={true} />\n        <Cell value=\"Ü\" isCompleted={true} />\n        <Cell value=\"Z\" isCompleted={true} />\n        <Cell isRevealing={true} isCompleted={true} value=\"E\" status=\"absent\" />\n        <Cell value=\"L\" isCompleted={true} />\n      </div>\n      <p className=\"text-sm text-gray-500 dark:text-gray-300\">\n        {strings.INFO_MODAL_ABSENT_EXPLANATION}\n      </p>\n\n      {isIOS && strings.INFO_MODAL_KEYBOARD_HINT && (\n        <div className=\"mt-6 rounded-lg border border-blue-200 bg-blue-50 p-3 dark:border-blue-700 dark:bg-blue-900/20\">\n          <p className=\"text-xs text-blue-700 dark:text-blue-300\">\n            {strings.INFO_MODAL_KEYBOARD_HINT}{' '}\n            <a\n              href=\"https://apps.apple.com/ua/app/qırımkey/id6739430313\"\n              className=\"font-bold underline\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              QırımKey\n            </a>\n          </p>\n        </div>\n      )}\n\n      <div className=\"mt-6 rounded-lg border border-yellow-200 bg-yellow-50 p-3 dark:border-yellow-700 dark:bg-yellow-900/20\">\n        <p className=\"mb-2 text-sm font-medium text-yellow-800 dark:text-yellow-200\">\n          {strings.INFO_MODAL_BETA_TITLE}\n        </p>\n        <p className=\"text-xs text-yellow-700 dark:text-yellow-300\">\n          {strings.INFO_MODAL_BETA_DESCRIPTION}\n        </p>\n      </div>\n\n      <p className=\"mt-4 text-sm italic text-gray-500 dark:text-gray-300\">\n        {strings.INFO_MODAL_SOURCE_CODE_TEXT} -{' '}\n        <a\n          href=\"https://github.com/qirimca/react-wordle-crimean-tatar\"\n          className=\"font-bold underline\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {strings.INFO_MODAL_SOURCE_CODE_LINK}\n        </a>{' '}\n      </p>\n    </BaseModal>\n  )\n}\n"],"names":["BaseModal","_ref","title","children","isOpen","handleClose","topLeftComponent","_jsx","Transition","Root","show","as","Fragment","Dialog","className","onClose","_jsxs","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","onClick","tabIndex","XCircleIcon","Title","LANGUAGES","code","name","nativeName","LanguageSelector","onLanguageChange","autoFocus","arguments","length","undefined","currentLocale","getLocale","setIsOpen","useState","currentLanguage","find","lang","onMouseEnter","onMouseLeave","onKeyDown","e","key","preventDefault","style","fontFamily","fill","viewBox","fillRule","d","clipRule","map","langCode","url","URL","window","location","href","searchParams","delete","set","toString","changeLanguage","InfoModal","strings","getLocalizedStrings","isIOS","test","navigator","userAgent","INFO_MODAL_TITLE","localStorage","setItem","INFO_MODAL_DESCRIPTION","Cell","isRevealing","isCompleted","value","status","INFO_MODAL_CORRECT_EXPLANATION","INFO_MODAL_PRESENT_EXPLANATION","INFO_MODAL_ABSENT_EXPLANATION","INFO_MODAL_KEYBOARD_HINT","target","rel","INFO_MODAL_BETA_TITLE","INFO_MODAL_BETA_DESCRIPTION","INFO_MODAL_SOURCE_CODE_TEXT","INFO_MODAL_SOURCE_CODE_LINK"],"sourceRoot":""}