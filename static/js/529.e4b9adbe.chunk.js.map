{"version":3,"file":"static/js/529.e4b9adbe.chunk.js","mappings":"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","sources":["components/modals/SettingsToggle.tsx","components/modals/SettingsModal.tsx","components/modals/BaseModal.tsx"],"sourcesContent":["import classnames from 'classnames'\n\ntype Props = {\n  settingName: string\n  flag: boolean\n  handleFlag: Function\n  description?: string\n}\n\nexport const SettingsToggle = ({\n  settingName,\n  flag,\n  handleFlag,\n  description,\n}: Props) => {\n  const toggleHolder = classnames(\n    'w-14 h-8 flex shrink-0 items-center bg-gray-300 rounded-full p-1 duration-300 ease-in-out cursor-pointer',\n    {\n      'bg-green-400': flag,\n    },\n  )\n  const toggleButton = classnames(\n    'bg-white w-6 h-6 rounded-full shadow-md transform duration-300 ease-in-out cursor-pointer',\n    {\n      'translate-x-6': flag,\n    },\n  )\n\n  return (\n    <>\n      <div className=\"flex justify-between gap-4 py-3\">\n        <div className=\"mt-2 text-left text-gray-500 dark:text-gray-300\">\n          <p className=\"leading-none\">{settingName}</p>\n          {description && (\n            <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-300\">\n              {description}\n            </p>\n          )}\n        </div>\n        <div className={toggleHolder} onClick={() => handleFlag(!flag)}>\n          <div className={toggleButton} />\n        </div>\n      </div>\n    </>\n  )\n}\n","import { getLocalizedStrings } from '../../constants/locales'\nimport { BaseModal } from './BaseModal'\nimport { SettingsToggle } from './SettingsToggle'\n\ntype Props = {\n  isOpen: boolean\n  handleClose: () => void\n  isHardMode: boolean\n  handleHardMode: Function\n  isDarkMode: boolean\n  handleDarkMode: Function\n  isHighContrastMode: boolean\n  handleHighContrastMode: Function\n}\n\nexport const SettingsModal = ({\n  isOpen,\n  handleClose,\n  isHardMode,\n  handleHardMode,\n  isDarkMode,\n  handleDarkMode,\n  isHighContrastMode,\n  handleHighContrastMode,\n}: Props) => {\n  const strings = getLocalizedStrings()\n\n  return (\n    <BaseModal\n      title={strings.SETTINGS_TITLE}\n      isOpen={isOpen}\n      handleClose={handleClose}\n    >\n      <div className=\"mt-2 flex flex-col divide-y\">\n        <SettingsToggle\n          settingName={strings.HARD_MODE_TEXT}\n          flag={isHardMode}\n          handleFlag={handleHardMode}\n          description={strings.HARD_MODE_DESCRIPTION}\n        />\n        <SettingsToggle\n          settingName={strings.DARK_MODE_TEXT}\n          flag={isDarkMode}\n          handleFlag={handleDarkMode}\n        />\n        <SettingsToggle\n          settingName={strings.HIGH_CONTRAST_MODE_TEXT}\n          flag={isHighContrastMode}\n          handleFlag={handleHighContrastMode}\n          description={strings.HIGH_CONTRAST_MODE_DESCRIPTION}\n        />\n      </div>\n    </BaseModal>\n  )\n}\n","import { Dialog, Transition } from '@headlessui/react'\nimport { XCircleIcon } from '@heroicons/react/outline'\nimport { Fragment } from 'react'\n\ntype Props = {\n  title: string\n  children: React.ReactNode\n  isOpen: boolean\n  handleClose: () => void\n  topLeftComponent?: React.ReactNode\n}\n\nexport const BaseModal = ({\n  title,\n  children,\n  isOpen,\n  handleClose,\n  topLeftComponent,\n}: Props) => {\n  return (\n    <Transition.Root show={isOpen} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"fixed inset-0 z-10 overflow-y-auto\"\n        onClose={handleClose}\n      >\n        <div className=\"flex min-h-full items-center justify-center px-4 py-10 text-center sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 min-h-screen bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div className=\"inline-block transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left align-bottom shadow-xl transition-all dark:bg-gray-800 sm:my-8 sm:w-full sm:max-w-sm sm:p-6 sm:align-middle\">\n              <button\n                onClick={() => handleClose()}\n                tabIndex={-1}\n                aria-pressed=\"false\"\n                aria-label=\"Закрити\"\n                className=\"absolute right-4 top-4 focus:outline-none\"\n              >\n                <XCircleIcon className=\"h-6 w-6 cursor-pointer dark:stroke-white\" />\n              </button>\n              <div>\n                <div className=\"text-center\">\n                  {topLeftComponent && (\n                    <div className=\"mb-4 flex justify-center\">\n                      {topLeftComponent}\n                    </div>\n                  )}\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-lg font-medium leading-6 text-gray-900 dark:text-gray-100\"\n                  >\n                    {title}\n                  </Dialog.Title>\n                  <div className=\"mt-2\">{children}</div>\n                </div>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n"],"names":["SettingsToggle","_ref","settingName","flag","handleFlag","description","toggleHolder","classnames","toggleButton","_jsx","_Fragment","children","_jsxs","className","onClick","SettingsModal","isOpen","handleClose","isHardMode","handleHardMode","isDarkMode","handleDarkMode","isHighContrastMode","handleHighContrastMode","strings","getLocalizedStrings","BaseModal","title","SETTINGS_TITLE","HARD_MODE_TEXT","HARD_MODE_DESCRIPTION","DARK_MODE_TEXT","HIGH_CONTRAST_MODE_TEXT","HIGH_CONTRAST_MODE_DESCRIPTION","topLeftComponent","Transition","Root","show","as","Fragment","Dialog","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","tabIndex","XCircleIcon","Title"],"sourceRoot":""}